 1041  spec:
 1042    mtls:
 1043      mode: STRICT
 1044  EOF
 1045  sleep 20; kubectl exec "$(kubectl get pod -l app=sleep -n foo -o jsonpath={.items..metadata.name})" -c istio-proxy -n foo -- openssl s_client -showcerts -connect httpbin.foo:8000 > httpbin-proxy-cert.txt
 1046  sed -n '/-----BEGIN CERTIFICATE-----/{:start /-----END CERTIFICATE-----/!{N;b start};/.*/p}' httpbin-proxy-cert.txt > certs.pem
 1047  awk 'BEGIN {counter=0;} /BEGIN CERT/{counter++} { print > "proxy-cert-" counter ".pem"}' < certs.pem
 1048  openssl x509 -in certs/cluster1/root-cert.pem -text -noout > /tmp/root-cert.crt.txt
 1049  openssl x509 -in ./proxy-cert-3.pem -text -noout > /tmp/pod-root-cert.crt.txt
 1050  diff -s /tmp/root-cert.crt.txt /tmp/pod-root-cert.crt.txt
 1051  openssl x509 -in certs/cluster1/ca-cert.pem -text -noout > /tmp/ca-cert.crt.txt
 1052  openssl x509 -in ./proxy-cert-2.pem -text -noout > /tmp/pod-cert-chain-ca.crt.txt
 1053  diff -s /tmp/ca-cert.crt.txt /tmp/pod-cert-chain-ca.crt.txt
 1054  openssl verify -CAfile <(cat certs/cluster1/ca-cert.pem certs/cluster1/root-cert.pem) ./proxy-cert-1.pem
 1055  openssl x509 -in certs/cluster1/ca-cert.pem -text -noout > /tmp/ca-cert.crt.txt
 1056  openssl x509 -in ./proxy-cert-2.pem -text -noout > /tmp/pod-cert-chain-ca.crt.txt
 1057  diff -s /tmp/ca-cert.crt.txt /tmp/pod-cert-chain-ca.crt.txt
 1058  openssl verify -CAfile <(cat certs/cluster1/ca-cert.pem certs/cluster1/root-cert.pem) ./proxy-cert-1.pem
 1059  openssl verify -CAfile <(cat certs/minikube/ca-cert.pem certs/minikube/root-cert.pem) ./proxy-cert-1.pem
 1060  openssl verify -CAfile <(cat certs/minikube/ca-cert.pem certs/minikube/root-cert.pem) ./proxy-cert.pem
 1061  openssl verify -CAfile <(cat certs/minikube/ca-cert.pem certs/minikube/root-cert.pem) ./proxy-cert-1.pem
 1062  openssl x509 -in certs/cluster1/root-cert.pem -text -noout > /tmp/root-cert.crt.txt
 1063  openssl x509 -in ./proxy-cert-3.pem -text -noout > /tmp/pod-root-cert.crt.txt
 1064  diff -s /tmp/root-cert.crt.txt /tmp/pod-root-cert.crt.txt
 1065  openssl x509 -in certs/minikube/root-cert.pem -text -noout > /tmp/root-cert.crt.txt
 1066  openssl x509 -in ./proxy-cert-3.pem -text -noout > /tmp/pod-root-cert.crt.txt
 1067  openssl x509 -in certs/minikube/root-cert.pem -text -noout > /tmp/root-cert.crt.txt
 1068  ls
 1069  istioctl install --set profile=demo
 1070  sleep 20; kubectl exec "$(kubectl get pod -l app=sleep -n foo -o jsonpath={.items..metadata.name})" -c istio-proxy -n foo -- openssl s_client -showcerts -connect httpbin.foo:8000 > httpbin-proxy-cert.txt
 1071  sed -n '/-----BEGIN CERTIFICATE-----/{:start /-----END CERTIFICATE-----/!{N;b start};/.*/p}' httpbin-proxy-cert.txt > certs.pem
 1072  cat certs.pem 
 1073  cat httpbin-proxy-cert.txt
 1074  awk 'BEGIN {counter=0;} /BEGIN CERT/{counter++} { print > "proxy-cert-" counter ".pem"}' < certs.pem
 1075  ls
 1076  cat certs/minikube/cert-chain.pem 
 1077  rm -rf certs
 1078  kubectl delete secret cacerts -n istio-system
 1079  kubectl delete ns foo istio-system
 1080  samples/bookinfo/platform/kube/cleanup.sh
 1081  minikube tunnel
 1082  cd projects/
 1083  cp ~/Downloads/strimzi-0.25.0.zip 
 1084  mkdir strimzi
 1085  cd strimzi/
 1086  cp ~/Downloads/strimzi-0.25.0.zip .
 1087  unzip strimzi-0.25.0.zip 
 1088  ls
 1089  cd strimzi-0.25.0/
 1090  minikube start --nodes 4
 1091  minikube add node
 1092  minikube  node add
 1093  kubectl create ns kafka
 1094  ls
 1095  code .
 1096  ls install/cluster-operator/*RoleBinding*.yaml
 1097  sed -i 's/namespace: .*/namespace: kafka/' install/cluster-operator/*RoleBinding*.yaml
 1098  kubectl create ns my-kafka-project
 1099  kubectl create -f install/cluster-operator/ -n kafka
 1100  kubectl create -f install/cluster-operator/020-RoleBinding-strimzi-cluster-operator.yaml -n my-kafka-project
 1101  kubectl create -f install/cluster-operator/031-RoleBinding-strimzi-cluster-operator-entity-operator-delegation.yaml -n my-kafka-project
 1102  cat << EOF | kubectl create -n my-kafka-project -f -
 1103  apiVersion: kafka.strimzi.io/v1beta2
 1104  kind: Kafka
 1105  metadata:
 1106    name: my-cluster
 1107  spec:
 1108    kafka:
 1109      replicas: 3
 1110      listeners:
 1111        - name: plain
 1112          port: 9092
 1113          type: internal
 1114          tls: false
 1115        - name: tls
 1116          port: 9093
 1117          type: internal
 1118          tls: true
 1119          authentication:
 1120            type: tls
 1121        - name: external
 1122          port: 9094
 1123          type: nodeport
 1124          tls: false
 1125      storage:
 1126        type: jbod
 1127        volumes:
 1128        - id: 0
 1129          type: persistent-claim
 1130          size: 10Gi
 1131          deleteClaim: false
 1132      config:
 1133        offsets.topic.replication.factor: 1
 1134        transaction.state.log.replication.factor: 1
 1135        transaction.state.log.min.isr: 1
 1136    zookeeper:
 1137      replicas: 3
 1138      storage:
 1139        type: persistent-claim
 1140        size: 10Gi
 1141        deleteClaim: false
 1142    entityOperator:
 1143      topicOperator: {}
 1144      userOperator: {}
 1145  EOF
 1146  kubectl get pods -n my-kafka-project
 1147  kubectl get pods -n my-kafka-project -w
 1148  kubectl logs my-cluster-zookeeper-2 -n my-kafka-project
 1149  kubectl delete namespace my-kafka-project
 1150  kubectl apply -f examples/kafka/kafka-persistent.yaml
 1151  kubectl logs my-cluster-zookeeper-2 -n my-kafka-project
 1152  kubectl get pods
 1153  kubectl get deployments
 1154  kubectl get deployment
 1155  kubectl get namespaces
 1156  kubectl get pods
 1157  kubectl get pods -n kafka
 1158  kubectl logs strimzi-cluster-operator-fffbc9b97-wsbd9 -n kafka
 1159  kubectl create -f install/cluster-operator/020-RoleBinding-strimzi-cluster-operator.yaml -n my-kafka-project
 1160  kubectl create namespace my-kafka-project
 1161  kubectl create -f install/cluster-operator/020-RoleBinding-strimzi-cluster-operator.yaml -n my-kafka-project
 1162  kubectl create -f install/cluster-operator/031-RoleBinding-strimzi-cluster-operator-entity-operator-delegation.yaml -n my-kafka-project
 1163  kubectl get pv,pvc
 1164  kubectl get pv,pvc -A
 1165  kubect get namespaces
 1166  kubectl get namespaces
 1167  kubectl delete namespace kafka
 1168  kubectl delete namespace my-kafka-project 
 1169  kubectl create ns kafka
 1170  sed -i 's/namespace: .*/namespace: kafka/' install/cluster-operator/*RoleBinding*.yaml
 1171  kubectl create ns my-kafka-project
 1172  kubectl create -f install/cluster-operator/ -n kafka
 1173  minikube delete
 1174  minikube start --nodes 4
 1175  kubectl create ns kafka
 1176  kubectl create ns my-kafka-project
 1177  kubectl create -f install/cluster-operator/ -n kafka
 1178  kubectl create -f install/cluster-operator/020-RoleBinding-strimzi-cluster-operator.yaml -n my-kafka-project
 1179  kubectl create -f install/cluster-operator/031-RoleBinding-strimzi-cluster-operator-entity-operator-delegation.yaml -n my-kafka-project
 1180  kubectl get pods -A
 1181  kubectl create -f examples/kafka/jkkafkasimple.yml 
 1182  kubectl get pods
 1183  kubectl get pods -A
 1184  kubectl delete -f examples/kafka/jkkafkasimple.yml 
 1185  kubectl create -f examples/kafka/jkkafkasimple.yml -n my-kafka-project
 1186  kubectl get pods -n my-kafka-project
 1187  kubectl get pods -n my-kafka-project -w
 1188  kubectl logs my-cluster-zookeeper-0
 1189  kubectl logs my-cluster-zookeeper-0 -n my-kafka-project
 1190  kubectl get pods -n my-kafka-project -w
 1191  kubectl get sts -n my-kafka-project
 1192  kubectl describe my-cluster-zookeeper sts -n my-kafka-project
 1193  kubectl describe sts  my-cluster-zookeeper  -n my-kafka-project
 1194  kubectl get pods -n my-kafka-project -w
 1195  kubectl get pods -n kafka
 1196  kubectl logs strimzi-cluster-operator-fffbc9b97-cxd64 -n kafka
 1197  kubectl get pods -n kafka
 1198  kubectl get pods -n my-kafka-project -w
 1199  kubectl describe pod my-cluster-zookeeper-0 -n my-kafka-project
 1200  kubectl get pods -n my-kafka-project -w
 1201  kubectl logs strimzi-cluster-operator-fffbc9b97-cxd64 -n kafka
 1202  kubectl get pods -n my-kafka-project -w
 1203  kubectl logs strimzi-cluster-operator-fffbc9b97-cxd64 -n kafka
 1204  kubectl get pods -n my-kafka-project -w
 1205  kubectl describe pod my-cluster-zookeeper-0 -n my-kafka-project
 1206  kubectl logs strimzi-cluster-operator-fffbc9b97-cxd64 -n kafka
 1207  kubectl get pods -n my-kafka-project -w
 1208  kubectl logs my-cluster-zookeeper-0 -n my-kafka-project
 1209  minikube addon enable default-storageclass
 1210  minikube addons enable default-storageclass
 1211  kubectl logs my-cluster-zookeeper-0 -n my-kafka-project
 1212  kubectl get storageclass
 1213  kubectl get pv
 1214  kubectl describe pod my-cluster-zookeeper-0 -n my-kafka-project
 1215  kubectl logs my-cluster-zookeeper-0 -n my-kafka-project
 1216  ls ~/.minikube/
 1217  ls ~/.minikube/files/
 1218  ls -al ~/.minikube/files/
 1219  ls -Rl ~/.minikube
 1220  cat /home/janusz/.minikube/machines/minikube-m04
 1221  cat /home/janusz/.minikube/machines/minikube-m04/config.json 
 1222  ls /data
 1223  ls -aR /data
 1224  ls -alR /data
 1225  cat /home/janusz/.minikube/machines/minikube-m04
 1226  ls /home/janusz/.minikube/machines/minikube-m04
 1227  ls /tmp/hostpath-provisioner
 1228  ls /var/temp
 1229  ls ~/.docker/
 1230  cat ~/.docker/config.json 
 1231  ls /var/lib/docker
 1232  sudo ls /var/lib/docker
 1233  sudo ls /var/lib/docker/volumes
 1234  sudo ls /var/lib/docker/volumes/miniku
 1235  sudo ls /var/lib/docker/volumes/miniku*
 1236  sudo ls /var/lib/docker/volumes -l
 1237  sudo ls /var/lib/docker/volumes/minikube -l
 1238  cd projects 
 1239  ls
 1240  git clone git@github.com:jankul02/istio-tutorial.git
 1241  cd istio-tutorial/
 1242  code .
 1243  kubectl create namespace istio-system
 1244  kubectl create namespace demo-app
 1245  kubectl create namespace kafka
 1246  cd ..
 1247  cd istio-1.11.2/
 1248  export PATH=$PWD/bin:$PATH
 1249  istioctl install --set profile=demo
 1250  kubectl apply -f samples/addons
 1251  cd ..
 1252  cd istio-tutorial/
 1253  kubectl create -f istiofiles/setup_demo_app_kubernetes.yaml
 1254  kubectl apply -f 'https://strimzi.io/install/latest?namespace=kafka' -n kafka
 1255  kubectl get pods -A
 1256  kubectl get pods -n demo-app 
 1257  kubectl describe pod consumer-58d748bd96-gcgcq -n demo-app 
 1258  kubectl get pods -A
 1259  kubectl create -f istiofiles/setup_kafka_cluster_kubernetes.yaml
 1260  kubectl get crd kafkas.kafka.strimzi.io -o jsonpath="{.spec.versions[*].name}"
 1261  kubectl create -f istiofiles/setup_kafka_cluster_kubernetes.yaml
 1262  kubectl delete -f istiofiles/setup_kafka_cluster_kubernetes.yaml
 1263  kubectl delete -f 'https://strimzi.io/install/latest?namespace=kafka' -n kafka
 1264  kubectl apply -f 'https://strimzi.io/install/v1beta1?namespace=kafka' -n kafka
 1265  kubectl apply -f 'https://strimzi.io/install/latest?namespace=kafka' -n kafka
 1266  kubectl get pods -A
 1267  kubectl describe pod consumer-58d748bd96-gcgcq -n dedmo-app
 1268  kubectl describe pod consumer-58d748bd96-gcgcq -n demo-app
 1269  kubectl create -f istiofiles/setup_kafka_cluster_kubernetes.yaml
 1270  kubectl apply -f istiofiles/setup_kafka_cluster_kubernetes.yaml
 1271  kubectl get pods -A
 1272  kubectl get pods -n kafka
 1273  kubectl get sts -n kafka
 1274  kubectl get services -n kafka
 1275  kubectl get crd -n kafka
 1276  kubect get pods
 1277  kubectl get pods
 1278  kubectl get crd 
 1279  kubectl get crd -n default
 1280  kubectl delete crd -n default
 1281  kubectl delete -f istiofiles/setup_kafka_cluster_kubernetes.yaml
 1282  kubectl get crd -n default
 1283  kubectl delete -f istiofiles/setup_kafka_cluster_kubernetes.yaml
 1284  kubectl get crd -n default
 1285  kubectl create -f istiofiles/setup_kafka_cluster_kubernetes.yaml -n kafka
 1286  kubectl get crd -n kafka
 1287  kubectl get pods -n kafka
 1288  kubectl get svc -n kafka
 1289  kubectl get pods -n kafka
 1290  kubectl get svc -n kafka
 1291  kubectl get crd -n kafka
 1292  kubectl get crd -n default
 1293  kubectl get pods -A
 1294  kubectl get deployments -A
 1295  kubectl get sts -A
 1296  kubectl apply -f istiofiles/setup_kafka_cluster_kubernetes.yaml -n kafka
 1297  kubectl get sts -A
 1298  kubectl get deployments -A
 1299  kubectl get crd -n kafka
 1300  kubectl get pods -n kafka
 1301  kubectl get deployments -A
 1302  kubectl get secret --namespace kafka -l strimzi.io/cluster=demo-app-log-cluster,strimzi.io/kind=KafkaUser -o json | sed 's/"namespace"\:\s*"kafka"/"namespace": "demo-app"/g'|jq 'del(.items[].metadata.ownerReferences)'|kubectl apply -f - -n demo-app
 1303  kubectl delete -f istiofiles/setup_kafka_cluster_kubernetes.yaml -n kafka
 1304  kubectl delete -f 'https://strimzi.io/install/latest?namespace=kafka' -n kafka
 1305  kubectl get deployments -A
 1306  kubectl delete -f istiofiles/setup_demo_app_kubernetes.yaml
 1307  kubectl get deployments -A
 1308  kubectl label namespace default istio-injection=enabled
 1309  kubectl label namespace kafka istio-injection=enabled
 1310  kubectl label namespace kafka istio-injection=disabled
 1311  kubectl label namespace kafka istio-injection=disabled --overwrite
 1312  kubectl label namespace default istio-injection=enabled
 1313  kubectl label namespace kafka istio-injection=enabled
 1314  kubectl label namespace kafka istio-injection=enabled --overwrite=true
 1315  cd docker/
 1316  make build push VERSION=0.0.26
 1317  docker login
 1318  make build push VERSION=0.0.26
 1319  make build push VERSION=0.0.22
 1320  make build push VERSION=0.0.27
 1321  docker login
 1322  make build push VERSION=0.0.27
 1323  make build push VERSION=0.0.28
 1324  kubectl exec zk-0 -- zookeeper-shell localhost:2181 create /mykey "Hello World"
 1325  kubectl exec zk-0 -- zookeeper-shell localhost:2181 create /mykey "Hello A"
 1326  kubectl exec zk-1 -- zookeeper-shell localhost:2181 get /mykey 
 1327  kubectl exec zk-0 -- zookeeper-shell localhost:2181 get /mykey 
 1328  kubectl exec zk-1 -- zookeeper-shell localhost:2181 get /mykey 
 1329  kubectl exec zk-0 -- zookeeper-shell localhost:2181 create /mykey "Hello A"
 1330  kubectl exec zk-0 -- zookeeper-shell localhost:2181 set /mykey "Hello A"
 1331  kubectl exec zk-0 -- zookeeper-shell localhost:2181 set /zkey "Hello A"
 1332  kubectl exec zk-0 -- zookeeper-shell localhost:2181 create /zkey "Hello A"
 1333  kubectl exec zk-0 -- zookeeper-shell localhost:2181 get /zkey "Hello A"
 1334  kubectl exec zk-1 -- zookeeper-shell localhost:2181 get /zkey "Hello A"
 1335  kubectl exec zk-1 -- zookeeper-shell localhost:2181 get zkey "Hello A"
 1336  kubectl exec zk-1 -- zookeeper-shell localhost:2181 get /zkey 
 1337  kubectl exec zk-0 -- zookeeper-shell localhost:2181 create /zkey "Hello A"
 1338  kubectl exec zk-1 -- zookeeper-shell localhost:2181 get /zkey 
 1339  kubectl exec zk-1 -- zookeeper-shell localhost:2181 ls 
 1340  kubectl exec zk-1 -- zookeeper-shell localhost:2181 ls /mykey
 1341  kubectl exec zk-1 -- zookeeper-shell --help
 1342  kubectl exec zk-1 -- zookeeper-shell -h
 1343  kubectl exec zk-1 -- zookeeper-shell
 1344  kubectl exec zk-1 -- zookeeper-shell localhost:2181/mykey ls
 1345  kubectl exec zk-1 -- zookeeper-shell localhost:2181 ls /
 1346  kubectl exec zk-0 -- zookeeper-shell localhost:2181 create /zkey "Hello A"
 1347  kubectl exec zk-0 -- zookeeper-shell localhost:2181 create /zkey "Hello B"
 1348  kubectl exec zk-0 -- zookeeper-shell localhost:2181 set /zkey "Hello B"
 1349  kubectl exec zk-0 -- zookeeper-shell localhost:2181 get /zkey "Hello B"
 1350  kubectl exec zk-0 -- zookeeper-shell localhost:2181 get /zookeeper/config
 1351  get /cluster/id
 1352  kubectl exec zk-0 -- zookeeper-shell localhost:2181 get /cluster/id
 1353  kubectl get logs zk-0
 1354  kubectl  logs zk-0
 1355  kubectl  logs zk-0 | grep zk-1
 1356  kubectl  logs zk-0 | grep zk-2
 1357  kubectl  logs zk-0 | grep leader
 1358  kubectl exec zk-0 -- /bin/bash
 1359  cat /etc/kafka/zookeeper.properties
 1360  /var/lib/zookeeper/data/myid
 1361  kubectl exec zk-0 -- /bin/bash
 1362  kubectl exec zk-0 -it -- /bin/bash
 1363  kubectl logs zk-2
 1364  kubectl exec zk-2 -it -- /bin/bash
 1365  kubectl get pods
 1366  kubectl describe pod zk-2
 1367  kubectl exec zk-0 -- zookeeper-shell localhost:2181 get /cluster/id
 1368  kubectl exec zk-0 -- zookeeper-shell localhost:2181 get /myitem
 1369  kubectl exec zk-0 -- zookeeper-shell localhost:2181 get /mykey
 1370  history | grep "make docker-build"
 1371  cd projects/zookeeperset
 1372  make docker-build docker-push deploy VERSION=0.0.165
 1373  kubectl get pod -A
 1374  kubectl apply -f config/samples/zksecrets0_username_password.yaml 
 1375  kubectl apply -f config/samples/zksecrets2_username_password.yaml 
 1376  kubectl apply -f config/samples/zksecrets_username_password.yaml 
 1377  kubectl apply -f config/samples/dataproxy_v1alpha1_zookeeperset.yaml 
 1378  kubectl get pod 
 1379  kubectl descibe pod zk-0
 1380  kubectl describe pod zk-0
 1381  minikube stop
 1382  kind create cluster -f kindcluster.yml 
 1383  kind create cluster --config kindcluster.yml 
 1384  ssh -Tvvvv -p 7999 git@www.cip.audi.de
 1385  history | grep ssh
 1386  ssh -p 4242 dev.nata4d.de
 1387  kind
 1388  kubectl get pods -A
 1389  kubectl config get-contexts
 1390  kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.1.0/aio/deploy/recommended.yaml
 1391  kubectl get pod -n kubernetes-dashboard
 1392  kubectl create clusterrolebinding default-admin --clusterrole cluster-admin --serviceaccount=default:default
 1393  token=$(kubectl get secrets -o jsonpath="{.items[?(@.metadata.annotations['kubernetes\.io/service-account\.name']=='default')].data.token}"|base64 --decode)
 1394  kubectl proxy
 1395  istioctl install --set profile=demo -y
 1396  make docker-build docker-push deploy VERSION=0.0.165
 1397  kubectl get pods -A
 1398  kubectl describe pod zookeeperset-controller-manager-5fcc8bbcb6-zm6mz -n zookeeperset-system
 1399  kubectl get pods -A
 1400  kubectl apply -f config/samples/zksecrets0_username_password.yaml 
 1401  kubectl apply -f config/samples/zksecrets2_username_password.yaml 
 1402  kubectl apply -f config/samples/zksecrets_username_password.yaml 
 1403  kubectl apply -f config/samples/dataproxy_v1alpha1_zookeeperset.yaml 
 1404  kubectl get pods -A
 1405  kubectl logs zookeeperset-controller-manager-5fcc8bbcb6-zm6mz -n zookeeperset-system
 1406  kubectl logs zookeeperset-controller-manager-5fcc8bbcb6-zm6mz -n zookeeperset-system manager
 1407  kubectl get pods -A
 1408  kubectl logs zk-0
 1409  kubectl describe pod zk-0
 1410  kubectl logs zk-0
 1411  kubectl get pods -A
 1412  kubectl exec zk-0 zkCli.sh create /mykey "hello world"
 1413  kubectl exec zk-0 -- zkCli.sh create /mykey "hello world"
 1414  kubectl logs zk-0
 1415  kubectl exec zk-0 -it -- /bin/bash
 1416  kubectl delete -f config/samples/dataproxy_v1alpha1_zookeeperset.yaml 
 1417  kubectl apply -f config/samples/dataproxy_v1alpha1_zookeeperset.yaml 
 1418  kubectl logs zookeeperset-controller-manager-5fcc8bbcb6-zm6mz -n zookeeperset-system manager
 1419  kubectl logs zk-0
 1420  kubectl get pods
 1421  kubectl describe pod zk-0
 1422  kubectl describe pod zk-2
 1423  kubectl logs zk-2
 1424  kubectl logs zk-0
 1425  kubectl logs zk-2
 1426  kubectl logs zk-0
 1427  kubectl exec zk-0 -it -- /bin/bash
 1428  kubectl exec zk-0 -- zookeeper-shell localhost:2181 create /mykey "Hello World"
 1429  kubectl exec zk-0 -- zookeeper-shell localhost:2181 get /mykey 
 1430  kubectl exec zk-1 -- zookeeper-shell localhost:2181 get /mykey 
 1431  kubectl exec zk-2 -- zookeeper-shell localhost:2181 get /mykey 
 1432  kubectl exec zk-0 -- zookeeper-shell localhost:2181 get /mykey 
 1433  kubectl exec zk-2 -- zookeeper-shell localhost:2181 get /mykey 
 1434  kubectl exec zk-0 -- zookeeper-shell localhost:2181 get /mykey 
 1435  kubectl exec zk-1 -- zookeeper-shell localhost:2181 get /mykey 
 1436  kubectl exec zk-0 -- zookeeper-shell localhost:2181 get /mykey 
 1437  kubectl exec zk-2 -- zookeeper-shell localhost:2181 get /mykey 
 1438  kubectl delete -f config/samples/dataproxy_v1alpha1_zookeeperset.yaml 
 1439  kubectl apply -f config/samples/dataproxy_v1alpha1_zookeeperset.yaml 
 1440  kubectl exec zk-0 -- zookeeper-shell localhost:2181 get /mykey 
 1441  kubectl exec zk-0 -- zookeeper-shell localhost:2181 create  /mykey "aaa"
 1442  kubectl delete -f config/samples/dataproxy_v1alpha1_zookeeperset.yaml 
 1443  kubectl get pods -A
 1444  make undeploy
 1445  kubectl get pods -A
 1446  kubectl describe pod zookeeperset-controller-manager-5f85bb96cc-gmbgw -n zookeeperset-system
 1447  kubectl get pods -A
 1448  kubectl get pods
 1449  kubectl apply -f config/samples/dataproxy_v1alpha1_zookeeperset.yaml 
 1450  kubectl get pods
 1451  kubectl logs zookeeperset-controller-manager-5f85bb96cc-gmbgw -n zookeeperset-system manager
 1452  kubectl get pods
 1453  kubectl get pods -A
 1454  kubectl get sts -A
 1455  kubectl describe sts zk
 1456  make undeploy
 1457  kubectl describe sts zk
 1458  kubectl get pods
 1459  kubectl logs zk-0
 1460  kubectl logs zk-0 -w
 1461  kubectl logs zk-0 
 1462  kubectl get pods
 1463  kubectl exec zk-0 -- zookeeper-shell localhost:2181 create /mykey "aaa"
 1464  kubectl exec zk-0 -- zookeeper-shell localhost:2181 create /mykey2 "aaa"
 1465  kubectl exec zk-2 -- zookeeper-shell localhost:2181 create /mykey3 "aaa"
 1466  kubectl exec zk-2 -- zookeeper-shell localhost:2181 get /mykey3 
 1467  kubectl exec zk-1 -- zookeeper-shell localhost:2181 get /mykey3 
 1468  kubectl exec zk-1 -- zookeeper-shell localhost:2181 get /mykey 
 1469  kubectl exec zk-1 -- zookeeper-shell localhost:2181 get /mykey1 
 1470  kubectl exec zk-1 -- zookeeper-shell localhost:2181 get /mykey2 
 1471  kubectl apply -f config/samples/dataproxy_v1alpha1_zookeeperset.yaml 
 1472  kubectl get pods
 1473  kubectl get pods -w
 1474  kubectl exec zk-1 -- zookeeper-shell localhost:2181 get /mykey2 
 1475  kubectl logs zk-2
 1476  kubectl exec zk-1 -- zookeeper-shell localhost:2181 get /mykey2 
 1477  kubectl logs zk-2 | grep TLS
 1478  kubectl logs zk-2 | grep tls
 1479  kubectl exec zk-1 -- zookeeper-shell localhost:2181 get /mykey2 
 1480  kubectl delete -f config/samples/dataproxy_v1alpha1_zookeeperset.yaml 
 1481  kubectl get secrets -A
 1482  kubectl get pods -A
 1483  kubectl apply -f config/samples/dataproxy_v1alpha1_zookeeperset.yaml 
 1484  kubectl get pods 
 1485  kubectl exec zk-1 -- zookeeper-shell localhost:2181 get /mykey2 
 1486  kubectl exec zk-1 -- zookeeper-shell localhost:2181 create /mykey2 "aqq"
 1487  kubectl exec zk-1 -- zookeeper-shell localhost:2181 create /mykey1 "aqq1"
 1488  kubectl exec zk-0 -- zookeeper-shell localhost:2181 create /mykey0 "aqq0"
 1489  kubectl exec zk-2 -- zookeeper-shell localhost:2181 create /mykey2 "aqq0"
 1490  kubectl exec zk-2 -- zookeeper-shell localhost:2181 set /mykey2 "aqq2"
 1491  kubectl exec zk-0 -it -- /bin/bash
 1492  kubectl exec zk-0 -it -- /bin/bash -c istio-proxy
 1493  kubectl exec zk-0 -c istio-proxy -it -- /bin/bash 
 1494  cd /var/lib/docker/volumes/minikube/_data
 1495  ls
 1496  ls -Rl
 1497  cd ..
 1498  ls -Rl | frep zookeeper
 1499  ls -Rl | fgrep zookeeper
 1500  ls -Rl | fgrep var
 1501  ls -Rl | fgrep minikube
 1502  ls
 1503  cd /var/lib/docker/volumes/minikube/_data
 1504  cd ..
 1505  ls -Rl | fgrep zookeeper
 1506  ls -Rl
 1507  cd 
 1508  cd /var/lib
 1509  ls
 1510  cd docker
 1511  ls
 1512  cd volumes
 1513  cd minikube
 1514  ls
 1515  lscd
 1516  cd
 1517  cd projects/
 1518  cd strimzi/
 1519  cd strimzi-0.25.0/
 1520  export PATH=$PWD/../../istio-1.11.2/bin:$PATH
 1521  echo $PATH
 1522  kubectl create -f install/cluster-operator/ -n kafka
 1523  kubectl get pods -A
 1524  kubectl get pods -n kafka
 1525  kubectl logs strimzi-cluster-operator-fffbc9b97-fvj2n -n kafka
 1526  kubectl logs strimzi-cluster-operator-fffbc9b97-fvj2n -n kafka init
 1527  kubectl logs strimzi-cluster-operator-fffbc9b97-fvj2n -n kafka
 1528  kubectl get pods -n kafka
 1529  kubectl describe pod  strimzi-cluster-operator-fffbc9b97-fvj2n -n kafka
 1530  kubectl create -f install/cluster-operator/ -n kafka
 1531  kubectl apply -f install/cluster-operator/ -n kafka
 1532  kubectl describe pod  strimzi-cluster-operator-fffbc9b97-fvj2n -n kafka
 1533  kubectl delete -f install/cluster-operator/ -n kafka
 1534  kubectl get pods -n kafka
 1535  kubectl apply -f install/cluster-operator/ -n kafka
 1536  kubectl get pods -n kafka
 1537  kubectl describe pod  strimzi-cluster-operator-fffbc9b97-qw85l -n kafka
 1538  kubectl get pods -n kafka
 1539  kubectl describe pod  strimzi-cluster-operator-fffbc9b97-qw85l -n kafka
 1540  kubectl delete -f install/cluster-operator/ -n kafka
 1541  kubectl get pods -n kafka
 1542  kubectl apply -f install/cluster-operator/ -n kafka
 1543  kubectl get pods -n kafka -w
 1544  kubectl describe pod  strimzi-cluster-operator-fffbc9b97-qw85l -n kafka
 1545  kubectl describe pod  strimzi-cluster-operator-fffbc9b97-b9shm -n kafka
 1546  kubectl get pods -n kafka -w
 1547  kubectl logs strimzi-cluster-operator-fffbc9b97-b9shm -n kafka
 1548  kubectl create namespace my-kafka-project
 1549  kubectl describe pod  strimzi-cluster-operator-fffbc9b97-b9shm -n kafka
 1550  kubectl logs strimzi-cluster-operator-fffbc9b97-b9shm -n kafka
 1551  kubectl get pods -n kafka -w
 1552  kubectl delete -f install/cluster-operator/ -n kafka
 1553  kubectl get pods -n kafka -w
 1554  kubectl apply -f install/cluster-operator/ -n kafka
 1555  kubectl get pods -n kafka -w
 1556  kubectl logs strimzi-cluster-operator-fffbc9b97-b9shm -n kafka
 1557  kubectl logs strimzi-cluster-operator-fffbc9b97-95s7q -n kafka
 1558  kubectl create clusterrolebinding strimzi-cluster-operator-namespaced --clusterrole=strimzi-cluster-operator-namespaced --serviceaccount kafka:strimzi-cluster-operator
 1559  kubectl create clusterrolebinding strimzi-cluster-operator-entity-operator-delegation --clusterrole=strimzi-entity-operator --serviceaccount kafka:strimzi-cluster-operato
 1560  kubectl create -f install/cluster-operator -n kafka
 1561  kubectl apply -f install/cluster-operator -n kafka
 1562  kubectl get pods -n kafka -w
 1563  kubectl describe pod strimzi-cluster-operator-6f684ff7fb-tp2gd -n kafka
 1564  kubectl get deployments
 1565  kubectl get deployments - n kafka
 1566  kubectl get deployments -n kafka
 1567  kubectl get namespaces
 1568  kubectl label namespace my-kafka-project istio-injection=enabled
 1569  kubectl label namespace demo-app istio-injection=enabled
 1570  history | grep jkkafka
 1571  kubectl apply -f examples/kafka/jkkafka.yml -n my-kafka-project
 1572  kubectl get pods -n my-kafka-project
 1573  kubectl get pods -A
 1574  kubectl get sts -A
 1575  kubectl apply -f examples/kafka/jkkafka.yml -n my-kafka-project
 1576  kubectl delete -f examples/kafka/jkkafka.yml -n my-kafka-project
 1577  kubectl get pods -n my-kafka-project
 1578  kubectl create -f examples/kafka/jkkafka.yml -n my-kafka-project
 1579  kubectl get pods -n my-kafka-project
 1580  kubectl get pods -n my-kafka-project -n
 1581  kubectl get pods -n my-kafka-project -w
 1582  kubectl get sts -A
 1583  kubectl get pods -A
 1584  kubectl get pods -n my-kafka-project -w
 1585  kubectl delete -f examples/kafka/jkkafka.yml -n my-kafka-project
 1586  kubectl get pods -n my-kafka-project -w
 1587  kubectl apply -f examples/kafka/jkkafka.yml -n my-kafka-project
 1588  kubectl get pods -n my-kafka-project -w
 1589  kubectl get pods -n my-kafka-project 
 1590  kubectl get deployments
 1591  kubectl get deployments =-n my-kafka-project
 1592  kubectl get deployments -n my-kafka-project
 1593  kubectl get sts -n my-kafka-project
 1594  kubectl get pods -n my-kafka-project 
 1595  kubectl delete -f examples/kafka/jkkafka.yml -n my-kafka-project
 1596  kubectl get pods -n my-kafka-project 
 1597  kubectl apply -f examples/kafka/jkkafkasimple.yml -n my-kafka-project
 1598  kubectl get pods -n my-kafka-project 
 1599  kubectl delete -f examples/kafka/jkkafkasimple.yml -n my-kafka-project
 1600  kubectl get pods -n my-kafka-project 
 1601  kubectl create -f examples/kafka/jkkafkasimple.yml -n my-kafka-project
 1602  kubectl get pods -n my-kafka-project 
 1603  kubectl get pods -n my-kafka-project  -w
 1604  kubectl get sts -A
 1605  kubectl delete -f install/cluster-operator/ -n kafka
 1606  kubectl get pods -A
 1607  kubectl create -f install/cluster-operator/ -n kafka
 1608  kubectl get pods -A
 1609  kubectl logs strimzi-cluster-operator-6f684ff7fb-dwt8l -n kafka
 1610  kubectl get pods -n my-kafka-project 
 1611  kubectl logs strimzi-cluster-operator-6f684ff7fb-dwt8l -n kafka
 1612  kubectl create -f examples/kafka/jkkafka.yml -n my-kafka-project
 1613  kubectl logs strimzi-cluster-operator-6f684ff7fb-dwt8l -n kafka
 1614  kubectl get pods -n my-kafka-project 
 1615  kubectl logs strimzi-cluster-operator-6f684ff7fb-dwt8l -n kafka
 1616  kubectl get pods -n my-kafka-project 
 1617  kubectl delete -f examples/kafka/jkkafka.yml -n my-kafka-project
 1618  kubectl delete -f install/cluster-operator/ -n kafka
 1619  kubectl get pods -n my-kafka-project 
 1620  kubectl get pods -A
 1621  kubectl create -f install/cluster-operator -n kafka
 1622  kubectl get pods -A
 1623  kubectl get pods -n kafka
 1624  kubectl create -f examples/kafka/jkkafka.yml -n my-kafka-project
 1625  kubectl get pods -n my-kafka-project 
 1626  kubectl delete -f examples/kafka/jkkafka.yml -n my-kafka-project
 1627  kubectl get pods -n my-kafka-project 
 1628  kubectl delete -f install/cluster-operator -n kafka
 1629  minikube ssh
 1630  top
 1631  minikube ssh
 1632  minikube version
 1633  minikube status
 1634  minikube --version
 1635  minikube -version
 1636  minikube -v
 1637  minikube version 
 1638  minikube config memory 8GB
 1639  minikube config set memory 8GB
 1640  minikube stop
 1641  minikube delete
 1642  minikube start -nodes 3
 1643  minikube start --nodes 3
 1644  kind
 1645  kind --version
 1646  kind create
 1647  kind create cluster
 1648  minikube start --nodes 3
 1649  kubectl get pods -A
 1650  kubectl label namespace default istio-injection=enabled
 1651  kubectl label ==help
 1652  kubectl label --help
 1653  kubectl label namespace default istio-injection-
 1654  kubectl label namespace default istio-injection
 1655  kubectl label namespace default istio-injection-
 1656  kubectl label namespace default istio-injection=enabled
 1657  cd ..
 1658  cd istio-1.11.2/
 1659  ls
 1660  kubectl exec zk-0 -it -- /bin/bash
 1661  kubectl exec zk-2 -it -- /bin/bash
 1662  kubectl exec -n default "$(kubectl get pod -n default -l app=zk -o jsonpath={.items..metadata.name})" -c istio-proxy -- sudo tcpdump dst port 3888  -A
 1663  kubectl exec -n default "$(kubectl get pod -n default  -o jsonpath={.items..metadata.name})" -c istio-proxy -- sudo tcpdump dst port 3888  -A
 1664  kubectl get pods
 1665  kubectl exec zk-2 -c istio-proxy -- sudo tcpdump dst port 80  -A
 1666  kubectl exec zk-2 -c istio-proxy -- /bin/bash
 1667  su
 1668  sudo tcpdump dst port 3888  -A
 1669  kubectl exec zk-2 -it -c istio-proxy -- /bin/bash
 1670  kubectl delete -f install/kubernetes/istio-auth.yaml
 1671  istioctl x uninstall --purge
 1672  kubectl get pods -A
 1673  istioctl install --set profile=demo -y --ser values.global.proxy.privileged=true 
 1674  istioctl install --set profile=demo -y --set values.global.proxy.privileged=true 
 1675  kubectl label namespace default istio-injection=enabled
 1676  kubectl apply -f samples/addons
 1677  kubectl rollout status deployment/kiali -n istio-system
 1678  kubectl get pods -A
 1679  kubectl rollout status deployment/kiali -n istio-system
 1680  kubectl rodescribe deployment/kiali -n istio-system
 1681  kubectl describe deployment/kiali -n istio-system
 1682  kubectl rollout status deployment/kiali -n istio-system
 1683  kubectl delete -f samples/addons
 1684  kubectl get pods -A
 1685  kubectl apply -f samples/addons
 1686  kubectl rollout status deployment/kiali -n istio-system
 1687  kubectl exec zk-2 -- zookeeper-shell localhost:2181 set /mykey2 "aqq2-1"
 1688  cd "/home/janusz/projects/zookeeperset"
 1689  git branch eval/ISTIO feature/ADP-4340-poc-feasibility-of-ansible-operator-sdk-to-build-a-k8s-operator
 1690  kubectl apply -f config/samples/istiomtlsforce.yaml 
 1691  kubectl delete -f config/samples/istiomtlsforce.yaml 
 1692  kubectl apply -f config/samples/istiomtlsforce.yaml 
 1693  history | make 
 1694  history | grep make 
 1695  kubectl apply -f config/samples/dataproxy_v1alpha1_zookeeperset.yaml 
 1696  kubectl get pods
 1697  kubectl get pods -w
 1698  kubectl apply -f config/samples/dataproxy_v1alpha1_zookeeperset.yaml 
 1699  kubectl get pods -w
 1700  kubectl apply -f config/samples/dataproxy_v1alpha1_zookeeperset.yaml 
 1701  kubectl get pods -w
 1702  kubectl delete po zk-2
 1703  kubectl get pods -w
 1704  kubectl apply -f config/samples/dataproxy_v1alpha1_zookeeperset.yaml 
 1705  kubectl get pods -w
 1706  kubectl delete po zk-2
 1707  kubectl get pods -w
 1708  kubectl apply -f config/samples/dataproxy_v1alpha1_zookeeperset.yaml 
 1709  history | grep make
 1710  make docker-build docker-push deploy
 1711  kubectl get sts -A
 1712  kubectl get pods -w
 1713  kubectl get pods -A
 1714  kubectl apply -f config/samples/dataproxy_v1alpha1_zookeeperset.yaml 
 1715  kubectl get all -n aqq
 1716  kubectl get all -n aqq -w
 1717  kubectl get pod -n aqq -w
 1718  cd "/home/janusz/projects/k8s-webhook-example"
 1719  git branch trial/dataproxypodbyname master
 1720  ./scripts/gen-certs.sh
 1721  make 
 1722  make deps
 1723  docker login
 1724  make deps
 1725  make gen-deploy-certs
 1726  make
 1727  ake build
 1728  make build
 1729  make
 1730  make deps
 1731  make gen-deploy-certs 
 1732  sudo apt install libnss3-tools
 1733  make gen-deploy-certs 
 1734  ls
 1735  kubectl get cert
 1736  kubectl get secrets
 1737  make publish-image 
 1738  make deps
 1739  make build
 1740  make build-image 
 1741  make deploy
 1742  make build
 1743  make build-dev
 1744  make build-dev-image 
 1745  make publish-image 
 1746  kubectl apply -f scripts/gen-certs.sh 
 1747  kubectl apply -f deploy/app-certs.yaml 
 1748  kubectl create namespace k8s-webhook-example
 1749  kubectl apply -f deploy/app-certs.yaml 
 1750  kubectl apply -f deploy/app.yaml 
 1751  kubectl get all -n k8s-webhook-example
 1752  kubectl apply -f deploy/webhooks.yaml 
 1753  kubectl get MutatingWebhookConfiguration -A
 1754  kubectl get describe MutatingWebhookConfiguration -A
 1755  kubectl  describe MutatingWebhookConfiguration k8s-webhook-example-webhook
 1756  kubectl run nginx --image=nginx -n 
 1757  kubectl run nginx --image=nginx 
 1758  kubectl get pods
 1759  kubectl describe pod nginx 
 1760  kubectl run aqq --image=nginx -n k8s-webhook-example
 1761  kubectl describe pod aqq -n k8s-webhook-example 
 1762  make Docker-Build
 1763  make Docker-build
 1764  make docker-build
 1765  make docker-push
 1766  make undeploy
 1767  make deploy
 1768  make docker-build
 1769  make docker-push
 1770  make undeploy
 1771  make deploy
 1772  make undeploy
 1773  make docker-build docker-push deploy
 1774  kubectl apply -f config/samples/redhatcop_v1alpha1_podpreset.yaml 
 1775  kubectl get pods
 1776  kubectl get pods -A
 1777  kubectl logs podpreset-webhook-controller-manager-58c69bdc6b-x24rz -n podpreset-webhook manager
 1778  kubectl get namespaces
 1779  kubectl get pod -n podpreset-webhook
 1780  kubectl get pod podpreset-webhook-controller-manager-58c69bdc6b-x24rz -n podpreset-webhook
 1781  kubectl get pod podpreset-webhook-controller-manager-58c69bdc6b-x24rz -n podpreset-webhook -o json
 1782  kubectl exec  podpreset-webhook-controller-manager-58c69bdc6b-x24rz -n podpreset-webhook -o json -it -- /bin/bash
 1783  kubectl exec  podpreset-webhook-controller-manager-58c69bdc6b-x24rz -n podpreset-webhook  -it -- /bin/bash
 1784  kubectl logs podpreset-webhook-controller-manager-58c69bdc6b-x24rz -n podpreset-webhook manager
 1785  kubectl get svc -w
 1786  kubectl get pod -w
 1787  kubectl get pod -n aqq -w
 1788  kubectl create namespace aqq
 1789  kubectl apply -f sequentialcreation.yaml -n aqq
 1790  kubectl get all -n aqq
 1791  kubectl get pod -n aqq
 1792  kubectl delete -f sequentialcreation.yaml -n aqq
 1793  kubectl delete -f testenv.yaml 
 1794  kubectl apply -f testenv.yaml 
 1795  kubectl delete -f testenv.yaml 
 1796  kubectl apply -f testenv.yaml 
 1797  kubectl delete -f testenv.yaml 
 1798  kubectl apply -f testenv.yaml 
 1799  kubectl delete -f testenv.yaml 
 1800  kubectl apply -f testenv.yaml 
 1801  kubectl delete -f testenv.yaml 
 1802  kubectl apply -f testenv.yaml 
 1803  kubectl delete -f testenv.yaml 
 1804  kubectl apply -f testenv.yaml 
 1805  kubectl delete -f testenv.yaml 
 1806  kubectl apply -f testenv.yaml 
 1807  kubectl delete -f testenv.yaml 
 1808  kubectl apply -f testenv.yaml 
 1809  kubectl delete -f testenv.yaml 
 1810  kubectl apply -f testenv.yaml 
 1811  kubectl delete -f testenv.yaml 
 1812  kubectl apply -f testenv.yaml 
 1813  kubectl delete -f testenv.yaml 
 1814  kubectl apply -f testenv.yaml 
 1815  kubectl delete -f testenv.yaml 
 1816  kubectl apply -f testenv.yaml 
 1817  kubectl delete -f testenv.yaml 
 1818  kubectl apply -f testenv.yaml 
 1819  kubectl delete -f testenv.yaml 
 1820  kubectl apply -f testenv.yaml 
 1821  kubectl delete -f testenv.yaml 
 1822  kubectl apply -f testenv.yaml 
 1823  kubectl delete -f testenv.yaml 
 1824  kubectl apply -f testenv.yaml 
 1825  kubectl delete -f testenv.yaml 
 1826  kubectl apply -f testenv.yaml 
 1827  kubectl delete -f testenv.yaml 
 1828  kubectl apply -f testenv.yaml 
 1829  kubectl | grep make
 1830  history | grep make
 1831  kubectl delete -f deploy/webhooks.yaml 
 1832  kubectl delete -f scripts/gen-certs.sh 
 1833  kubectl delete -f deploy/app.yaml 
 1834  kubectl delete -f scripts/gen-certs.sh 
 1835  kubectl delete -f deploy/webhooks.yaml 
 1836  kubectl get all -n k8s-webhook-example
 1837  kubectl delete pod aqq
 1838  kubectl get pods -n k8s-webhook-example
 1839  kubectl delete pod aqq -n k8s-webhook-example
 1840  kubectl get pods -A
 1841  kubectl logs podpreset-webhook-controller-manager-58c69bdc6b-x24rz -n podpreset-webhook manager
 1842  kubectl get pods -A
 1843  make undeploy
 1844  kubectl get pods -A
 1845  make docker-build docker-push deploy
 1846  kubectl get pods -A
 1847  kubectl logs podpreset-webhook-controller-manager-679659f6f9-7g98r -n podpreset-webhook manager
 1848  kubectl apply -f config/samples/redhatcop_v1alpha1_podpreset.yaml 
 1849  kubectl logs podpreset-webhook-controller-manager-679659f6f9-7g98r -n podpreset-webhook manager
 1850  make undeploy
 1851  make docker-build docker-push deploy
 1852  kubectl apply -f config/samples/redhatcop_v1alpha1_podpreset.yaml 
 1853  kubectl get pods -A
 1854  kubectl logs zookeeperset-controller-manager-6f56d6466d-x2vwx -n podpreset-webhook manager
 1855  kubectl logs podpreset-webhook-controller-manager-fd5966f56-dvtbm -n podpreset-webhook manager
 1856  kubectl logs podpreset-webhook-controller-manager-fd5966f56-dvtbm -n podpreset-webhook manager | grep podpreset-webhook
 1857  make undeploy
 1858  make docker-build docker-push deploy
 1859  kubectl get pods -A
 1860  kubectl logs podpreset-webhook-controller-manager-86547f889d-h2g2z -n podpreset-webhook manager
 1861  kubectl apply -f config/samples/redhatcop_v1alpha1_podpreset.yaml 
 1862  kubectl logs podpreset-webhook-controller-manager-86547f889d-h2g2z -n podpreset-webhook manager
 1863  make undeploy
 1864  make docker-build docker-push deploy
 1865  kubectl get pods -A
 1866  kubectl logs podpreset-webhook-controller-manager-5d47d57567-xp5zx -n podpreset-webhook manager
 1867  kubectl apply -f config/samples/redhatcop_v1alpha1_podpreset.yaml 
 1868  kubectl logs podpreset-webhook-controller-manager-5d47d57567-xp5zx -n podpreset-webhook manager
 1869  kubectl get pods -A
 1870  make undeploy
 1871  make docker-build docker-push deploy
 1872  kubectl get pods -A
 1873  kubectl logs podpreset-webhook-controller-manager-f6697775b-mc94t -n podpreset-webhook manager
 1874  kubectl apply -f config/samples/redhatcop_v1alpha1_podpreset.yaml 
 1875  kubectl logs podpreset-webhook-controller-manager-f6697775b-mc94t -n podpreset-webhook manager
 1876  make undeploy
 1877  make docker-build docker-push deploy
 1878  kubectl apply -f config/samples/redhatcop_v1alpha1_podpreset.yaml 
 1879  kubectl get pods -A
 1880  kubectl logs podpreset-webhook-controller-manager-6b77994c96-xn6fp -n podpreset-webhook manager
 1881  kubectl get pods -A
 1882  kubectl logs podpreset-webhook-controller-manager-6b77994c96-xn6fp -n podpreset-webhook manager
 1883  make undeploy
 1884  make docker-build docker-push deploy
 1885  kubectl get pods -A
 1886  kubectl logs podpreset-webhook-controller-manager-59c86c857c-5dmfx -n podpreset-webhook manager
 1887  kubectl apply -f config/samples/redhatcop_v1alpha1_podpreset.yaml 
 1888  kubectl logs podpreset-webhook-controller-manager-59c86c857c-5dmfx -n podpreset-webhook manager
 1889  make undeploy
 1890  make docker-build docker-push deploy
 1891  kubectl get pods -A
 1892  kubectl logs podpreset-webhook-controller-manager-6c6c489f75-rvrvg -n podpreset-webhook manager
 1893  kubectl apply -f config/samples/redhatcop_v1alpha1_podpreset.yaml 
 1894  kubectl logs podpreset-webhook-controller-manager-6c6c489f75-rvrvg -n podpreset-webhook manager
 1895  make undeploy
 1896  make docker-build docker-push deploy
 1897  kubectl apply -f config/samples/redhatcop_v1alpha1_podpreset.yaml 
 1898  kubectl get pods -A
 1899  kubectl logs podpreset-webhook-controller-manager-5d5c956466-68xhk -n podpreset-webhook manager
 1900  platformio run --target upload
 1901  platformio device monitor --baud 9600
 1902  make undeploy
 1903  make docker-build docker-push deploy
 1904  kubectl get pods -A
 1905  kubectl logs podpreset-webhook-controller-manager-86f59f45fc-ckcmb -n podpreset-webhook manager
 1906  kubectl apply -f config/samples/redhatcop_v1alpha1_podpreset.yaml 
 1907  kubectl logs podpreset-webhook-controller-manager-86f59f45fc-ckcmb -n podpreset-webhook manager
 1908  make undeploy
 1909  make docker-build docker-push deploy
 1910  kubectl get pods -A
 1911  kubectl logs podpreset-webhook-controller-manager-786799c844-d58mq -n podpreset-webhook manager
 1912  kubectl apply -f config/samples/redhatcop_v1alpha1_podpreset.yaml 
 1913  kubectl logs podpreset-webhook-controller-manager-786799c844-d58mq -n podpreset-webhook manager
 1914  make undeploy
 1915  make docker-build docker-push deploy
 1916  kubectl get pods -A
 1917  kubectl logs podpreset-webhook-controller-manager-6f44bb9f87-lffgd -n podpreset-webhook manager
 1918  kubectl apply -f config/samples/redhatcop_v1alpha1_podpreset.yaml 
 1919  kubectl logs podpreset-webhook-controller-manager-6f44bb9f87-lffgd -n podpreset-webhook manager
 1920  kubectl apply -f config/samples/redhatcop_v1alpha1_podpreset.yaml 
 1921  kubectl logs podpreset-webhook-controller-manager-6f44bb9f87-lffgd -n podpreset-webhook manager
 1922  make undeploy
 1923  make docker-build docker-push deploy
 1924  kubectl get pods -A
 1925  kubectl logs podpreset-webhook-controller-manager-846688d7-ctvth -n podpreset-webhook manager
 1926  kubectl apply -f config/samples/redhatcop_v1alpha1_podpreset.yaml 
 1927  kubectl logs podpreset-webhook-controller-manager-846688d7-ctvth -n podpreset-webhook manager
 1928  kubectl apply -f config/samples/redhatcop_v1alpha1_podpreset.yaml 
 1929  kubectl logs podpreset-webhook-controller-manager-846688d7-ctvth -n podpreset-webhook manager
 1930  kubectl apply -f config/samples/redhatcop_v1alpha1_podpreset.yaml 
 1931  kubectl get podpreset 
 1932  kubectl get podpreset frontend
 1933  kubectl get podpreset frontend ßo json
 1934  kubectl get podpreset frontend -o json
 1935  make undeploy
 1936  make docker-build docker-push deploy
 1937  kubectl logs podpreset-webhook-controller-manager-846688d7-ctvth -n podpreset-webhook manager
 1938  kubectl get pods -A
 1939  kubectl logs podpreset-webhook-controller-manager-846688d7-nxftx -n podpreset-webhook manager
 1940  make undeploy
 1941  make docker-build docker-push deploy
 1942  kubectl get pods -A
 1943  kubectl logs podpreset-webhook-controller-manager-ddd47dd64-2czhl -n podpreset-webhook manager
 1944  make undeploy
 1945  make docker-build docker-push deploy
 1946  kubectl logs podpreset-webhook-controller-manager-ddd47dd64-2czhl -n podpreset-webhook manager
 1947  kubectl get pods -A
 1948  kubectl logs podpreset-webhook-controller-manager-569768d8b5-sljn9 -n podpreset-webhook manager
 1949  make undeploy
 1950  make docker-build docker-push deploy
 1951  kubectl get pods -A
 1952  kubectl logs podpreset-webhook-controller-manager-5dbff95d98-rfn77 -n podpreset-webhook manager
 1953  make undeploy
 1954  make docker-build docker-push deploy
 1955  kubectl get pods -A
 1956  kubectl logs podpreset-webhook-controller-manager-86b995559f-7bwdk -n podpreset-webhook manager
 1957  make undeploy
 1958  make docker-build docker-push deploy
 1959  kubectl get pods -A
 1960  kubectl logs zookeeperset-controller-manager-66fd85d489-ntxft -n podpreset-webhook manager
 1961  kubectl logs podpreset-webhook-controller-manager-6d44cc4676-vstjk -n podpreset-webhook manager
 1962  kubectl logs zookeeperset-controller-manager-66fd85d489-ntxft -n podpreset-webhook manager
 1963  kubectl logs podpreset-webhook-controller-manager-6d44cc4676-vstjk -n podpreset-webhook manager
 1964  make undeploy  docker-build docker-push deploy
 1965  kubectl get pods -A
 1966  kubectl logs podpreset-webhook-controller-manager-75cdf688b9-cn24r -n podpreset-webhook manager
 1967  make undeploy  docker-build docker-push deploy
 1968  make  docker-build docker-push deploy
 1969  kubectl get pods -A
 1970  kubectl logs podpreset-webhook-controller-manager-5c88cc8bc8-lns76 -n podpreset-webhook manager
 1971  make undeploy  docker-build docker-push deploy
 1972  make  docker-build docker-push deploy
 1973  kubectl get pods -A
 1974  kubectl logs podpreset-webhook-controller-manager-7556bf4bc-p22v6 -n podpreset-webhook manager
 1975  make undeploy  docker-build docker-push deploy
 1976  kubectl get pods -A
 1977  kubectl logs podpreset-webhook-controller-manager-7556bf4bc-tv5pl -n podpreset-webhook manager
 1978  make undeploy  docker-build docker-push deploy
 1979  kubectl get pods -A
 1980  kubectl logs podpreset-webhook-controller-manager-bbd7c9866-j57ft -n podpreset-webhook manager
 1981  kubectl get pods -A
 1982  kubectl logs podpreset-webhook-controller-manager-bbd7c9866-j57ft -n podpreset-webhook manager
 1983  kubectl get pods -A
 1984  kubectl logs zookeeperset-controller-manager-598ff7f8f5-vqpss -n podpreset-webhook manager
 1985  cd docker/
 1986  make build push
 1987  minikube start
 1988  minikube addons enable registry
 1989  MINIKUBEIP=`minikube ip`
 1990  minikube ip
 1991  KUBEDNS=`kubectl get svc -o json kube-dns --namespace=kube-system | jq -r '.spec.clusterIP'`
 1992  kubectl get svc -o json kube-dns --namespace=kube-system | jq -r '.spec.clusterIP'
 1993  route -n add 10.96.0.0/24 $MINIKUBEIP
 1994  route -v add 10.96.0.0/24 $MINIKUBEIP
 1995  route -v add -net 10.96.0.0/24 $MINIKUBEIP
 1996  sudo route -v add -net 10.96.0.0/24 $MINIKUBEIP
 1997  sudo route -v add  10.96.0.0/24 $MINIKUBEIP
 1998  sudo route -v add -net  10.96.0.0/24 $MINIKUBEIP
 1999  kubectl get svc -o json kube-dns --namespace=kube-system | jq -r '.spec.clusterIP'
 2000  KUBEDNS=`kubectl get svc -o json kube-dns --namespace=kube-system | jq -r '.spec.clusterIP'`
 2001  minikube ip
 2002  kubectl describe pod kafka-0
 2003  kubectl get svc
 2004  kubectl describe pod kafka-0
 2005  kubectl describe service zk-hs
 2006  kubeclt exec zk-0 -it -- /bin/bash
 2007  kubectl exec zk-0 -it -- /bin/bash
 2008  cd project
 2009  cd projects
 2010  cd verifyk8s/
 2011  vi busybox.yaml
 2012  kubectl create -f busybox.yaml
 2013  kubectl exec -ti busybox -- nslookup zk-cs.default.cluster.local
 2014  kubectl get pods
 2015  vi busybox.yaml
 2016  kubectl apply -f busybox.yaml
 2017  kubectl delete -f busybox.yaml
 2018  vi busybox.yaml
 2019  kubectl delete -f busybox.yaml
 2020  vi busybox.yaml
 2021  kubectl apply -f busybox.yaml
 2022  vi busybox.yaml
 2023  kubectl apply -f busybox.yaml
 2024  kubectl exec -ti busybox -- nslookup zk-cs.default.cluster.local
 2025  kubectl get pods
 2026  kubectl exec -ti busybox2 -- nslookup zk-cs.default.cluster.local
 2027  kubectl delete -f busybox.yaml
 2028  kubectl apply -f busybox.yaml
 2029  kubectl get pods
 2030  kubectl delete -f busybox.yaml
 2031  kubectl apply -f https://k8s.io/examples/admin/dns/dnsutils.yaml
 2032  kubectl get pods
 2033  kubectl exec -i -t dnsutils -- nslookup kubernetes.default
 2034  kubectl get pods
 2035  docker login
 2036  kubectl delete -f busybox.yaml
 2037  kubectl get pods
 2038  kubectl describe pod dnsutils
 2039  sudo ls /etc/systemd/resolved.conf 
 2040  history > abc.log
